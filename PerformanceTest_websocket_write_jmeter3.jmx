<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="3.2" jmeter="3.3 r1808647">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="owner_email" elementType="Argument">
            <stringProp name="Argument.name">owner_email</stringProp>
            <stringProp name="Argument.value">daria@mailinator.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="owner_password" elementType="Argument">
            <stringProp name="Argument.name">owner_password</stringProp>
            <stringProp name="Argument.value">11111111</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="api_host" elementType="Argument">
            <stringProp name="Argument.name">api_host</stringProp>
            <stringProp name="Argument.value">localhost</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="api_port" elementType="Argument">
            <stringProp name="Argument.name">api_port</stringProp>
            <stringProp name="Argument.value">3000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="oauth_host" elementType="Argument">
            <stringProp name="Argument.name">oauth_host</stringProp>
            <stringProp name="Argument.value">localhost</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="oauth_port" elementType="Argument">
            <stringProp name="Argument.name">oauth_port</stringProp>
            <stringProp name="Argument.value">3000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ws_host" elementType="Argument">
            <stringProp name="Argument.name">ws_host</stringProp>
            <stringProp name="Argument.value">localhost</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ws_port" elementType="Argument">
            <stringProp name="Argument.name">ws_port</stringProp>
            <stringProp name="Argument.value">8000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ws_protocol" elementType="Argument">
            <stringProp name="Argument.name">ws_protocol</stringProp>
            <stringProp name="Argument.value">http</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="oauth_protocol" elementType="Argument">
            <stringProp name="Argument.name">oauth_protocol</stringProp>
            <stringProp name="Argument.value">http</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="api_protocol" elementType="Argument">
            <stringProp name="Argument.name">api_protocol</stringProp>
            <stringProp name="Argument.value">http</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="prodID" elementType="Argument">
            <stringProp name="Argument.name">prodID</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="deviceID" elementType="Argument">
            <stringProp name="Argument.name">deviceID</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="deviceKey" elementType="Argument">
            <stringProp name="Argument.name">deviceKey</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="username" elementType="Argument">
            <stringProp name="Argument.name">username</stringProp>
            <stringProp name="Argument.value">MCS_Lite_QA</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="response" elementType="Argument">
            <stringProp name="Argument.name">response</stringProp>
            <stringProp name="Argument.value">100</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="DataChannelID" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="display_boolean" elementType="Argument">
            <stringProp name="Argument.name">display_boolean</stringProp>
            <stringProp name="Argument.value">display_boolean</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="display_integer" elementType="Argument">
            <stringProp name="Argument.name">display_integer</stringProp>
            <stringProp name="Argument.value">display_integer</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="display_category" elementType="Argument">
            <stringProp name="Argument.name">display_category</stringProp>
            <stringProp name="Argument.value">display_category</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="display_integer" elementType="Argument">
            <stringProp name="Argument.name">display_integer</stringProp>
            <stringProp name="Argument.value">display_integer</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="display_hex" elementType="Argument">
            <stringProp name="Argument.name">display_hex</stringProp>
            <stringProp name="Argument.value">display_hex</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="display_string" elementType="Argument">
            <stringProp name="Argument.name">display_string</stringProp>
            <stringProp name="Argument.value">display_string</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="display_gps" elementType="Argument">
            <stringProp name="Argument.name">display_gps</stringProp>
            <stringProp name="Argument.value">display_gps</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="display_gpio" elementType="Argument">
            <stringProp name="Argument.name">display_gpio</stringProp>
            <stringProp name="Argument.value">display_gpio</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="display_pwm" elementType="Argument">
            <stringProp name="Argument.name">display_pwm</stringProp>
            <stringProp name="Argument.value">display_pwm</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="control_analog" elementType="Argument">
            <stringProp name="Argument.name">control_analog</stringProp>
            <stringProp name="Argument.value">control_analog</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="control_boolean" elementType="Argument">
            <stringProp name="Argument.name">control_boolean</stringProp>
            <stringProp name="Argument.value">control_boolean</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="control_category" elementType="Argument">
            <stringProp name="Argument.name">control_category</stringProp>
            <stringProp name="Argument.value">control_category</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="control_integer" elementType="Argument">
            <stringProp name="Argument.name">control_integer</stringProp>
            <stringProp name="Argument.value">control_integer</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="control_float" elementType="Argument">
            <stringProp name="Argument.name">control_float</stringProp>
            <stringProp name="Argument.value">control_float</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="control_hex" elementType="Argument">
            <stringProp name="Argument.name">control_hex</stringProp>
            <stringProp name="Argument.value">control_hex</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="control_string" elementType="Argument">
            <stringProp name="Argument.name">control_string</stringProp>
            <stringProp name="Argument.value">control_string</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="control_gps" elementType="Argument">
            <stringProp name="Argument.name">control_gps</stringProp>
            <stringProp name="Argument.value">control_gps</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="control_gpio" elementType="Argument">
            <stringProp name="Argument.name">control_gpio</stringProp>
            <stringProp name="Argument.value">control_gpio</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="control_pwm" elementType="Argument">
            <stringProp name="Argument.name">control_pwm</stringProp>
            <stringProp name="Argument.value">control_pwm</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="control_gamepad" elementType="Argument">
            <stringProp name="Argument.name">control_gamepad</stringProp>
            <stringProp name="Argument.value">control_gamepad</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="display_float" elementType="Argument">
            <stringProp name="Argument.name">display_float</stringProp>
            <stringProp name="Argument.value">display_float</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="display_image" elementType="Argument">
            <stringProp name="Argument.name">display_image</stringProp>
            <stringProp name="Argument.value">display_image</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="display_video" elementType="Argument">
            <stringProp name="Argument.name">display_video</stringProp>
            <stringProp name="Argument.value">display_video</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain">${api_host}</stringProp>
        <stringProp name="HTTPSampler.port"></stringProp>
        <stringProp name="HTTPSampler.protocol">http</stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename">/Users/mcs/Desktop/perf_result_all_in_one_100.jtl</stringProp>
      </ResultCollector>
      <hashTree/>
      <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.TransactionsPerSecondGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Transactions per Second" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename">/Users/mcs/Desktop/perf_result_all_in_one_100.jtl</stringProp>
        <longProp name="interval_grouping">1000</longProp>
        <boolProp name="graph_aggregated">true</boolProp>
        <stringProp name="include_sample_labels"></stringProp>
        <stringProp name="exclude_sample_labels"></stringProp>
        <stringProp name="start_offset"></stringProp>
        <stringProp name="end_offset"></stringProp>
        <boolProp name="include_checkbox_state">false</boolProp>
        <boolProp name="exclude_checkbox_state">false</boolProp>
      </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
      <hashTree/>
      <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="false">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="StatGraphVisualizer" testclass="ResultCollector" testname="Aggregate Graph" enabled="false">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="RespTimeGraphVisualizer" testclass="ResultCollector" testname="Response Time Graph" enabled="false">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <kg.apc.jmeter.perfmon.PerfMonCollector guiclass="kg.apc.jmeter.vizualizers.PerfMonGui" testclass="kg.apc.jmeter.perfmon.PerfMonCollector" testname="jp@gc - PerfMon Metrics Collector" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename">/Users/mcs/Desktop/perf_result_hardware_all_in_one_100.jtl</stringProp>
        <longProp name="interval_grouping">1000</longProp>
        <boolProp name="graph_aggregated">false</boolProp>
        <stringProp name="include_sample_labels"></stringProp>
        <stringProp name="exclude_sample_labels"></stringProp>
        <stringProp name="start_offset"></stringProp>
        <stringProp name="end_offset"></stringProp>
        <boolProp name="include_checkbox_state">false</boolProp>
        <boolProp name="exclude_checkbox_state">false</boolProp>
        <collectionProp name="metricConnections">
          <collectionProp name="-30362480">
            <stringProp name="-1204607085">localhost</stringProp>
            <stringProp name="1600768">4444</stringProp>
            <stringProp name="66952">CPU</stringProp>
            <stringProp name="714653913">name=nwjs Helper#</stringProp>
          </collectionProp>
          <collectionProp name="1963890495">
            <stringProp name="-1204607085">localhost</stringProp>
            <stringProp name="1600768">4444</stringProp>
            <stringProp name="-1993889503">Memory</stringProp>
            <stringProp name="714653913">name=nwjs Helper#</stringProp>
          </collectionProp>
          <collectionProp name="-314238514">
            <stringProp name="-1204607085">localhost</stringProp>
            <stringProp name="1600768">4444</stringProp>
            <stringProp name="66952">CPU</stringProp>
            <stringProp name="-1383344497">name=node#</stringProp>
          </collectionProp>
          <collectionProp name="1680014461">
            <stringProp name="-1204607085">localhost</stringProp>
            <stringProp name="1600768">4444</stringProp>
            <stringProp name="-1993889503">Memory</stringProp>
            <stringProp name="-1383344497">name=node#</stringProp>
          </collectionProp>
        </collectionProp>
      </kg.apc.jmeter.perfmon.PerfMonCollector>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Sign in" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1508990501000</longProp>
        <longProp name="ThreadGroup.end_time">1508990501000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${oauth_host}</stringProp>
          <stringProp name="HTTPSampler.port">${oauth_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${oauth_protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">true</boolProp>
          <stringProp name="CookieManager.policy">default</stringProp>
        </CookieManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Web Login" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">email=${owner_email}&amp;password=${owner_password}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/oauth/login</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="RegexExtractor.refname">TOKEN</stringProp>
            <stringProp name="RegexExtractor.regex">token=(.+?);</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">NoTokenGet</stringProp>
            <stringProp name="RegexExtractor.match_number"></stringProp>
            <stringProp name="Sample.scope">all</stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Verify Cookie" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;token&quot;:&quot;${TOKEN}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/oauth/cookies</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="content-type" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="(Replace Token) BeanShell PostProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.eclipsesource.json.*;

String jsonString = prev.getResponseDataAsString();
JsonObject responseJson = JsonObject.readFrom(jsonString);
JsonObject resultJson=responseJson.get(&quot;results&quot;);

String userToken=resultJson.get(&quot;access_token&quot;).asString();
String userEmail=resultJson.get(&quot;email&quot;).asString();
String userNickName=resultJson.get(&quot;userName&quot;).asString();
String userId=resultJson.get(&quot;userId&quot;).asString();


props.put(&quot;ownerAuthorization&quot;, &quot;Bearer &quot; + userToken);

props.put(&quot;ownerEmail&quot;, userEmail);
props.put(&quot;ownerNickName&quot;, userNickName);
props.put(&quot;ownerId&quot;, userId);

log.info(&quot;The user is: &quot; + userEmail + &quot;, &quot; + userNickName + &quot;, &quot; + userId);
log.info(&quot;The user token is: &quot; + userToken);
</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Setup" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1508990501000</longProp>
        <longProp name="ThreadGroup.end_time">1508990501000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${api_host}</stringProp>
          <stringProp name="HTTPSampler.port">${api_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${api_protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="content-type" elementType="Header">
              <stringProp name="Header.name">content-type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="authorization" elementType="Header">
              <stringProp name="Header.name">authorization</stringProp>
              <stringProp name="Header.value">${__property(ownerAuthorization)}</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Prototype" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Add Prototype" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;prototypeName&quot;:&quot;performanceTest&quot;,&quot;prototypeDescription&quot;:&quot;performanceTest&quot;,&quot;prototypeImageURL&quot;:&quot;&quot;, &quot;version&quot;:&quot;0.1&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/prototypes</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.eclipsesource.json.*;

String jsonString = prev.getResponseDataAsString();
JsonObject responseJson = JsonObject.readFrom(jsonString);
JsonObject resultJson = responseJson.get(&quot;data&quot;);

//get the prototype ID and key from the response
String prodID=resultJson.get(&quot;prototypeId&quot;).asString();
String prodKey=resultJson.get(&quot;prototypeKey&quot;).asString();

vars.put(&quot;prodID&quot;, prodID);
vars.put(&quot;prodKey&quot;, prodKey);
props.put(&quot;prodID&quot;, prodID);

log.info(&quot;The new created prototype is with: prodID=&quot; + prodID + &quot;, prodKey=&quot; + prodKey);</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Data Channel" enabled="true"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Add Data Channel" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Data Channel" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;type&quot;:1,&quot;id&quot;:&quot;${control_boolean}&quot;,&quot;description&quot;:&quot;${control_boolean} description&quot;,&quot;name&quot;:&quot;${control_boolean} name&quot;,&quot;format&quot;:{},&quot;channelType&quot;:{&quot;id&quot;:7,&quot;name&quot;:&quot;Switch&quot;},&quot;isHidden&quot;:true}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/prototypes/${prodID}/datachannels</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import com.eclipsesource.json.*;

String jsonString = prev.getResponseDataAsString();
JsonObject responseJson = JsonObject.readFrom(jsonString);

JsonObject dataChannelsJson = responseJson.get(&quot;data&quot;).asObject();


String dataChannelID = dataChannelsJson.get(&quot;datachannelId&quot;).asString();

//vars.put(&quot;data chennel&quot;, dataChannelID);
log.info(&quot;data chennel ID is &quot; + dataChannelID);</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Data Channel" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;type&quot;:1,&quot;id&quot;:&quot;${control_integer}&quot;,&quot;description&quot;:&quot;${control_integer} description&quot;,&quot;name&quot;:&quot;${control_integer} name&quot;,&quot;format&quot;:{&quot;unit&quot;:{&quot;displayType&quot;:&quot;unitType&quot;,&quot;required&quot;:true, &quot;value&quot;:&quot;km&quot;},&quot;lowerbound&quot;:{&quot;displayType&quot;:&quot;text&quot;,&quot;required&quot;:true,&quot;type&quot;:&quot;number&quot;, &quot;value&quot;:&quot;0&quot;},&quot;upperbound&quot;:{&quot;displayType&quot;:&quot;text&quot;,&quot;required&quot;:true,&quot;type&quot;:&quot;number&quot;, &quot;value&quot;:&quot;1000&quot;}},&quot;channelType&quot;:{&quot;id&quot;:1,&quot;name&quot;:&quot;Integer&quot;},&quot;isHidden&quot;:true}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/prototypes/${prodID}/datachannels</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import com.eclipsesource.json.*;

String jsonString = prev.getResponseDataAsString();
JsonObject responseJson = JsonObject.readFrom(jsonString);

JsonObject dataChannelsJson = responseJson.get(&quot;data&quot;).asObject();


String dataChannelID = dataChannelsJson.get(&quot;datachannelId&quot;).asString();

//vars.put(&quot;data chennel&quot;, dataChannelID);
log.info(&quot;data chennel ID is &quot; + dataChannelID);</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Data Channel" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;type&quot;:1,&quot;id&quot;:&quot;${control_float}&quot;,&quot;description&quot;:&quot;${control_float} description&quot;,&quot;name&quot;:&quot;${control_float} name&quot;,&quot;format&quot;:{&quot;unit&quot;:{&quot;displayType&quot;:&quot;unitType&quot;,&quot;required&quot;:true, &quot;value&quot;:&quot;km&quot;},&quot;lowerbound&quot;:{&quot;displayType&quot;:&quot;text&quot;,&quot;required&quot;:true,&quot;type&quot;:&quot;number&quot;,&quot;value&quot;:&quot;0&quot;},&quot;upperbound&quot;:{&quot;displayType&quot;:&quot;text&quot;,&quot;required&quot;:true,&quot;type&quot;:&quot;number&quot;,&quot;value&quot;:&quot;100&quot;}},&quot;channelType&quot;:{&quot;id&quot;:2,&quot;name&quot;:&quot;Float&quot;},&quot;isHidden&quot;:true}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/prototypes/${prodID}/datachannels</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import com.eclipsesource.json.*;

String jsonString = prev.getResponseDataAsString();
JsonObject responseJson = JsonObject.readFrom(jsonString);

JsonObject dataChannelsJson = responseJson.get(&quot;data&quot;).asObject();


String dataChannelID = dataChannelsJson.get(&quot;datachannelId&quot;).asString();

//vars.put(&quot;data chennel&quot;, dataChannelID);
log.info(&quot;data chennel ID is &quot; + dataChannelID);</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Data Channel" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;type&quot;:1,&quot;id&quot;:&quot;${control_hex}&quot;,&quot;description&quot;:&quot;${control_hex} description&quot;,&quot;name&quot;:&quot;${control_hex} name&quot;,&quot;format&quot;:{},&quot;channelType&quot;:{&quot;id&quot;:4,&quot;name&quot;:&quot;Hex&quot;},&quot;isHidden&quot;:true}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/prototypes/${prodID}/datachannels</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import com.eclipsesource.json.*;

String jsonString = prev.getResponseDataAsString();
JsonObject responseJson = JsonObject.readFrom(jsonString);

JsonObject dataChannelsJson = responseJson.get(&quot;data&quot;).asObject();


String dataChannelID = dataChannelsJson.get(&quot;datachannelId&quot;).asString();

//vars.put(&quot;data chennel&quot;, dataChannelID);
log.info(&quot;data chennel ID is &quot; + dataChannelID);</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Data Channel" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;type&quot;:1,&quot;id&quot;:&quot;${control_string}&quot;,&quot;description&quot;:&quot;${control_string} description&quot;,&quot;name&quot;:&quot;${control_string} name&quot;,&quot;format&quot;:{},&quot;channelType&quot;:{&quot;id&quot;:5,&quot;name&quot;:&quot;String&quot;},&quot;isHidden&quot;:true}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/prototypes/${prodID}/datachannels</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import com.eclipsesource.json.*;

String jsonString = prev.getResponseDataAsString();
JsonObject responseJson = JsonObject.readFrom(jsonString);

JsonObject dataChannelsJson = responseJson.get(&quot;data&quot;).asObject();


String dataChannelID = dataChannelsJson.get(&quot;datachannelId&quot;).asString();

//vars.put(&quot;data chennel&quot;, dataChannelID);
log.info(&quot;data chennel ID is &quot; + dataChannelID);</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Data Channel" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;type&quot;:1,&quot;id&quot;:&quot;${control_gpio}&quot;,&quot;description&quot;:&quot;${control_gpio} description&quot;,&quot;name&quot;:&quot;${control_gpio} name&quot;,&quot;format&quot;:{},&quot;channelType&quot;:{&quot;id&quot;:11,&quot;name&quot;:&quot;GPIO&quot;},&quot;isHidden&quot;:true}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/prototypes/${prodID}/datachannels</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import com.eclipsesource.json.*;

String jsonString = prev.getResponseDataAsString();
JsonObject responseJson = JsonObject.readFrom(jsonString);

JsonObject dataChannelsJson = responseJson.get(&quot;data&quot;).asObject();


String dataChannelID = dataChannelsJson.get(&quot;datachannelId&quot;).asString();

//vars.put(&quot;data chennel&quot;, dataChannelID);
log.info(&quot;data chennel ID is &quot; + dataChannelID);</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Data Channel" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;type&quot;:1,&quot;id&quot;:&quot;${control_pwm}&quot;,&quot;description&quot;:&quot;${control_pwm} description&quot;,&quot;name&quot;:&quot;${control_pwm} name&quot;,&quot;format&quot;:{&quot;lowerbound&quot;:{&quot;displayType&quot;:&quot;text&quot;,&quot;required&quot;:true,&quot;type&quot;:&quot;number&quot;,&quot;value&quot;:&quot;0&quot;},&quot;upperbound&quot;:{&quot;displayType&quot;:&quot;text&quot;,&quot;required&quot;:true,&quot;type&quot;:&quot;number&quot;,&quot;value&quot;:&quot;555&quot;}},&quot;channelType&quot;:{&quot;id&quot;:12,&quot;name&quot;:&quot;PWM&quot;},&quot;isHidden&quot;:true}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/prototypes/${prodID}/datachannels</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import com.eclipsesource.json.*;

String jsonString = prev.getResponseDataAsString();
JsonObject responseJson = JsonObject.readFrom(jsonString);

JsonObject dataChannelsJson = responseJson.get(&quot;data&quot;).asObject();


String dataChannelID = dataChannelsJson.get(&quot;datachannelId&quot;).asString();

//vars.put(&quot;data chennel&quot;, dataChannelID);
log.info(&quot;data chennel ID is &quot; + dataChannelID);</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Data Channel" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;type&quot;:2,&quot;id&quot;:&quot;${display_boolean}&quot;,&quot;description&quot;:&quot;${display_boolean} description&quot;,&quot;name&quot;:&quot;${display_boolean} name&quot;,&quot;format&quot;:{},&quot;channelType&quot;:{&quot;id&quot;:3,&quot;name&quot;:&quot;Switch&quot;},&quot;isHidden&quot;:true}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/prototypes/${prodID}/datachannels</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import com.eclipsesource.json.*;

String jsonString = prev.getResponseDataAsString();
JsonObject responseJson = JsonObject.readFrom(jsonString);

JsonObject dataChannelsJson = responseJson.get(&quot;data&quot;).asObject();


String dataChannelID = dataChannelsJson.get(&quot;datachannelId&quot;).asString();

//vars.put(&quot;data chennel&quot;, dataChannelID);
log.info(&quot;data chennel ID is &quot; + dataChannelID);</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Data Channel" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;type&quot;:2,&quot;id&quot;:&quot;${display_integer}&quot;,&quot;description&quot;:&quot;${display_integer} description&quot;,&quot;name&quot;:&quot;${display_integer} name&quot;,&quot;format&quot;:{&quot;unit&quot;:{&quot;displayType&quot;:&quot;unitType&quot;,&quot;required&quot;:true,&quot;value&quot;:&quot;kg&quot;},&quot;lowerbound&quot;:{&quot;displayType&quot;:&quot;text&quot;,&quot;required&quot;:true,&quot;type&quot;:&quot;number&quot;,&quot;value&quot;:&quot;-100&quot;},&quot;upperbound&quot;:{&quot;displayType&quot;:&quot;text&quot;,&quot;required&quot;:true,&quot;type&quot;:&quot;number&quot;,&quot;value&quot;:&quot;1000&quot;}},&quot;channelType&quot;:{&quot;id&quot;:1,&quot;name&quot;:&quot;Integer&quot;},&quot;isHidden&quot;:true}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/prototypes/${prodID}/datachannels</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import com.eclipsesource.json.*;

String jsonString = prev.getResponseDataAsString();
JsonObject responseJson = JsonObject.readFrom(jsonString);

JsonObject dataChannelsJson = responseJson.get(&quot;data&quot;).asObject();


String dataChannelID = dataChannelsJson.get(&quot;datachannelId&quot;).asString();

//vars.put(&quot;data chennel&quot;, dataChannelID);
log.info(&quot;data chennel ID is &quot; + dataChannelID);</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Data Channel" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;type&quot;:2,&quot;id&quot;:&quot;${display_float}&quot;,&quot;description&quot;:&quot;${display_float} description&quot;,&quot;name&quot;:&quot;${display_float} name&quot;,&quot;format&quot;:{&quot;unit&quot;:{&quot;displayType&quot;:&quot;unitType&quot;,&quot;required&quot;:true,&quot;value&quot;:&quot;kg&quot;},&quot;lowerbound&quot;:{&quot;displayType&quot;:&quot;text&quot;,&quot;required&quot;:true,&quot;type&quot;:&quot;number&quot;,&quot;value&quot;:&quot;-100&quot;},&quot;upperbound&quot;:{&quot;displayType&quot;:&quot;text&quot;,&quot;required&quot;:true,&quot;type&quot;:&quot;number&quot;,&quot;value&quot;:&quot;-1000&quot;}},&quot;channelType&quot;:{&quot;id&quot;:2,&quot;name&quot;:&quot;Float&quot;},&quot;isHidden&quot;:true}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/prototypes/${prodID}/datachannels</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import com.eclipsesource.json.*;

String jsonString = prev.getResponseDataAsString();
JsonObject responseJson = JsonObject.readFrom(jsonString);

JsonObject dataChannelsJson = responseJson.get(&quot;data&quot;).asObject();


String dataChannelID = dataChannelsJson.get(&quot;datachannelId&quot;).asString();

//vars.put(&quot;data chennel&quot;, dataChannelID);
log.info(&quot;data chennel ID is &quot; + dataChannelID);</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Data Channel" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;type&quot;:2,&quot;id&quot;:&quot;${display_hex}&quot;,&quot;description&quot;:&quot;${display_hex} description&quot;,&quot;name&quot;:&quot;${display_hex} name&quot;,&quot;format&quot;:{},&quot;channelType&quot;:{&quot;id&quot;:4,&quot;name&quot;:&quot;Hex&quot;},&quot;isHidden&quot;:true}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/prototypes/${prodID}/datachannels</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import com.eclipsesource.json.*;

String jsonString = prev.getResponseDataAsString();
JsonObject responseJson = JsonObject.readFrom(jsonString);

JsonObject dataChannelsJson = responseJson.get(&quot;data&quot;).asObject();


String dataChannelID = dataChannelsJson.get(&quot;datachannelId&quot;).asString();

//vars.put(&quot;data chennel&quot;, dataChannelID);
log.info(&quot;data chennel ID is &quot; + dataChannelID);</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Data Channel" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;type&quot;:2,&quot;id&quot;:&quot;${display_string}&quot;,&quot;description&quot;:&quot;${display_string} description&quot;,&quot;name&quot;:&quot;${display_string} name&quot;,&quot;format&quot;:{},&quot;channelType&quot;:{&quot;id&quot;:5,&quot;name&quot;:&quot;String&quot;},&quot;isHidden&quot;:true}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/prototypes/${prodID}/datachannels</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import com.eclipsesource.json.*;

String jsonString = prev.getResponseDataAsString();
JsonObject responseJson = JsonObject.readFrom(jsonString);

JsonObject dataChannelsJson = responseJson.get(&quot;data&quot;).asObject();


String dataChannelID = dataChannelsJson.get(&quot;datachannelId&quot;).asString();

//vars.put(&quot;data chennel&quot;, dataChannelID);
log.info(&quot;data chennel ID is &quot; + dataChannelID);</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Data Channel" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;type&quot;:2,&quot;id&quot;:&quot;${display_gpio}&quot;,&quot;description&quot;:&quot;${display_gpio} description&quot;,&quot;name&quot;:&quot;${display_gpio} name&quot;,&quot;format&quot;:{},&quot;channelType&quot;:{&quot;id&quot;:11,&quot;name&quot;:&quot;GPIO&quot;},&quot;isHidden&quot;:true}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/prototypes/${prodID}/datachannels</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import com.eclipsesource.json.*;

String jsonString = prev.getResponseDataAsString();
JsonObject responseJson = JsonObject.readFrom(jsonString);

JsonObject dataChannelsJson = responseJson.get(&quot;data&quot;).asObject();


String dataChannelID = dataChannelsJson.get(&quot;datachannelId&quot;).asString();

//vars.put(&quot;data chennel&quot;, dataChannelID);
log.info(&quot;data chennel ID is &quot; + dataChannelID);</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Data Channel" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;type&quot;:2,&quot;id&quot;:&quot;${display_pwm}&quot;,&quot;description&quot;:&quot;${display_pwm} description&quot;,&quot;name&quot;:&quot;${display_pwm} name&quot;,&quot;format&quot;:{},&quot;channelType&quot;:{&quot;id&quot;:12,&quot;name&quot;:&quot;PWM&quot;},&quot;isHidden&quot;:true}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/prototypes/${prodID}/datachannels</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import com.eclipsesource.json.*;

String jsonString = prev.getResponseDataAsString();
JsonObject responseJson = JsonObject.readFrom(jsonString);

JsonObject dataChannelsJson = responseJson.get(&quot;data&quot;).asObject();


String dataChannelID = dataChannelsJson.get(&quot;datachannelId&quot;).asString();

//vars.put(&quot;data chennel&quot;, dataChannelID);
log.info(&quot;data chennel ID is &quot; + dataChannelID);</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Sending Data" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">200</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1508990501000</longProp>
        <longProp name="ThreadGroup.end_time">1508990501000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${api_host}</stringProp>
          <stringProp name="HTTPSampler.port">${api_port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${api_protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="content-type" elementType="Header">
              <stringProp name="Header.name">content-type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="authorization" elementType="Header">
              <stringProp name="Header.name">authorization</stringProp>
              <stringProp name="Header.value">${__property(ownerAuthorization)}</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Data Point" enabled="true"/>
        <hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Device" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">1</stringProp>
          </LoopController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Add Test Device" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;deviceName&quot;:&quot;performanceTest&quot;,&quot;deviceDescription&quot;:&quot;performanceTest&quot;,&quot;deviceImageURL&quot;:&quot;&quot;,&quot;prototypeId&quot;:&quot;${__property(prodID)}&quot;,&quot;createUserId&quot;:&quot;${__property(ownerId)}&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/devices</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import com.eclipsesource.json.*;

String jsonString = prev.getResponseDataAsString();
JsonObject responseJson = JsonObject.readFrom(jsonString);
JsonObject resultJson = responseJson.get(&quot;data&quot;);

String deviceID = resultJson.get(&quot;deviceId&quot;).asString();
String deviceKey = resultJson.get(&quot;deviceKey&quot;).asString();

vars.put(&quot;deviceID&quot;, deviceID);
vars.put(&quot;deviceKey&quot;, deviceKey);</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="WebSocket" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <intProp name="LoopController.loops">-1</intProp>
          </LoopController>
          <hashTree>
            <JMeter.plugins.functional.samplers.websocket.WebSocketSampler guiclass="JMeter.plugins.functional.samplers.websocket.WebSocketSamplerGui" testclass="JMeter.plugins.functional.samplers.websocket.WebSocketSampler" testname="WebSocket Upload Data Point" enabled="true">
              <stringProp name="serverAddress">${ws_host}</stringProp>
              <stringProp name="serverPort">8000</stringProp>
              <stringProp name="implementation">RFC6455 (v13)</stringProp>
              <stringProp name="protocol">ws</stringProp>
              <stringProp name="contextPath">/deviceId/${deviceID}/deviceKey/${deviceKey}</stringProp>
              <stringProp name="contentEncoding">UTF-8</stringProp>
              <stringProp name="requestPayload">{&quot;datachannelId&quot;:&quot;${display_boolean}&quot;,&quot;values&quot;:{&quot;value&quot;:${__Random(0, 1)}}}</stringProp>
              <stringProp name="connectionTimeout">5000</stringProp>
              <stringProp name="responseTimeout">${response}</stringProp>
              <boolProp name="ignoreSslErrors">false</boolProp>
              <boolProp name="streamingConnection">true</boolProp>
              <stringProp name="connectionId"></stringProp>
              <stringProp name="responsePattern"></stringProp>
              <stringProp name="closeConncectionPattern"></stringProp>
              <stringProp name="proxyAddress"></stringProp>
              <stringProp name="proxyPassword"></stringProp>
              <stringProp name="proxyPort"></stringProp>
              <stringProp name="proxyUsername"></stringProp>
              <stringProp name="messageBacklog">3</stringProp>
              <elementProp name="queryStringParameters" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </JMeter.plugins.functional.samplers.websocket.WebSocketSampler>
            <hashTree/>
            <JMeter.plugins.functional.samplers.websocket.WebSocketSampler guiclass="JMeter.plugins.functional.samplers.websocket.WebSocketSamplerGui" testclass="JMeter.plugins.functional.samplers.websocket.WebSocketSampler" testname="WebSocket Upload Data Point" enabled="true">
              <stringProp name="serverAddress">${ws_host}</stringProp>
              <stringProp name="serverPort">8000</stringProp>
              <stringProp name="implementation">RFC6455 (v13)</stringProp>
              <stringProp name="protocol">ws</stringProp>
              <stringProp name="contextPath">/deviceId/${deviceID}/deviceKey/${deviceKey}</stringProp>
              <stringProp name="contentEncoding">UTF-8</stringProp>
              <stringProp name="requestPayload">{&quot;datachannelId&quot;:&quot;${display_integer}&quot;,&quot;values&quot;:{&quot;value&quot;:${__Random(0, 100)}}}</stringProp>
              <stringProp name="connectionTimeout">5000</stringProp>
              <stringProp name="responseTimeout">${response}</stringProp>
              <boolProp name="ignoreSslErrors">false</boolProp>
              <boolProp name="streamingConnection">true</boolProp>
              <stringProp name="connectionId"></stringProp>
              <stringProp name="responsePattern"></stringProp>
              <stringProp name="closeConncectionPattern"></stringProp>
              <stringProp name="proxyAddress"></stringProp>
              <stringProp name="proxyPassword"></stringProp>
              <stringProp name="proxyPort"></stringProp>
              <stringProp name="proxyUsername"></stringProp>
              <stringProp name="messageBacklog">3</stringProp>
              <elementProp name="queryStringParameters" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </JMeter.plugins.functional.samplers.websocket.WebSocketSampler>
            <hashTree/>
            <JMeter.plugins.functional.samplers.websocket.WebSocketSampler guiclass="JMeter.plugins.functional.samplers.websocket.WebSocketSamplerGui" testclass="JMeter.plugins.functional.samplers.websocket.WebSocketSampler" testname="WebSocket Upload Data Point" enabled="true">
              <stringProp name="serverAddress">${ws_host}</stringProp>
              <stringProp name="serverPort">8000</stringProp>
              <stringProp name="implementation">RFC6455 (v13)</stringProp>
              <stringProp name="protocol">ws</stringProp>
              <stringProp name="contextPath">/deviceId/${deviceID}/deviceKey/${deviceKey}</stringProp>
              <stringProp name="contentEncoding">UTF-8</stringProp>
              <stringProp name="requestPayload">{&quot;datachannelId&quot;:&quot;${display_float}&quot;,&quot;values&quot;:{&quot;value&quot;:${__Random(1, 999999)}.${__Random(1, 999999)}}}</stringProp>
              <stringProp name="connectionTimeout">5000</stringProp>
              <stringProp name="responseTimeout">${response}</stringProp>
              <boolProp name="ignoreSslErrors">false</boolProp>
              <boolProp name="streamingConnection">true</boolProp>
              <stringProp name="connectionId"></stringProp>
              <stringProp name="responsePattern"></stringProp>
              <stringProp name="closeConncectionPattern"></stringProp>
              <stringProp name="proxyAddress"></stringProp>
              <stringProp name="proxyPassword"></stringProp>
              <stringProp name="proxyPort"></stringProp>
              <stringProp name="proxyUsername"></stringProp>
              <stringProp name="messageBacklog">3</stringProp>
              <elementProp name="queryStringParameters" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </JMeter.plugins.functional.samplers.websocket.WebSocketSampler>
            <hashTree/>
            <JMeter.plugins.functional.samplers.websocket.WebSocketSampler guiclass="JMeter.plugins.functional.samplers.websocket.WebSocketSamplerGui" testclass="JMeter.plugins.functional.samplers.websocket.WebSocketSampler" testname="WebSocket Upload Data Point" enabled="true">
              <stringProp name="serverAddress">${ws_host}</stringProp>
              <stringProp name="serverPort">8000</stringProp>
              <stringProp name="implementation">RFC6455 (v13)</stringProp>
              <stringProp name="protocol">ws</stringProp>
              <stringProp name="contextPath">/deviceId/${deviceID}/deviceKey/${deviceKey}</stringProp>
              <stringProp name="contentEncoding">UTF-8</stringProp>
              <stringProp name="requestPayload">{&quot;datachannelId&quot;:&quot;${display_hex}&quot;,&quot;values&quot;:{&quot;value&quot;:&quot;${__RandomString(30,ABCDEF0123456789)}&quot;}}</stringProp>
              <stringProp name="connectionTimeout">5000</stringProp>
              <stringProp name="responseTimeout">${response}</stringProp>
              <boolProp name="ignoreSslErrors">false</boolProp>
              <boolProp name="streamingConnection">true</boolProp>
              <stringProp name="connectionId"></stringProp>
              <stringProp name="responsePattern"></stringProp>
              <stringProp name="closeConncectionPattern"></stringProp>
              <stringProp name="proxyAddress"></stringProp>
              <stringProp name="proxyPassword"></stringProp>
              <stringProp name="proxyPort"></stringProp>
              <stringProp name="proxyUsername"></stringProp>
              <stringProp name="messageBacklog">3</stringProp>
              <elementProp name="queryStringParameters" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </JMeter.plugins.functional.samplers.websocket.WebSocketSampler>
            <hashTree/>
            <JMeter.plugins.functional.samplers.websocket.WebSocketSampler guiclass="JMeter.plugins.functional.samplers.websocket.WebSocketSamplerGui" testclass="JMeter.plugins.functional.samplers.websocket.WebSocketSampler" testname="WebSocket Upload Data Point" enabled="true">
              <stringProp name="serverAddress">${ws_host}</stringProp>
              <stringProp name="serverPort">8000</stringProp>
              <stringProp name="implementation">RFC6455 (v13)</stringProp>
              <stringProp name="protocol">ws</stringProp>
              <stringProp name="contextPath">/deviceId/${deviceID}/deviceKey/${deviceKey}</stringProp>
              <stringProp name="contentEncoding">UTF-8</stringProp>
              <stringProp name="requestPayload">{&quot;datachannelId&quot;:&quot;${display_string}&quot;,&quot;values&quot;:{&quot;value&quot;:&quot;${__RandomString(10,ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789)}&quot;}}</stringProp>
              <stringProp name="connectionTimeout">5000</stringProp>
              <stringProp name="responseTimeout">${response}</stringProp>
              <boolProp name="ignoreSslErrors">false</boolProp>
              <boolProp name="streamingConnection">true</boolProp>
              <stringProp name="connectionId"></stringProp>
              <stringProp name="responsePattern"></stringProp>
              <stringProp name="closeConncectionPattern"></stringProp>
              <stringProp name="proxyAddress"></stringProp>
              <stringProp name="proxyPassword"></stringProp>
              <stringProp name="proxyPort"></stringProp>
              <stringProp name="proxyUsername"></stringProp>
              <stringProp name="messageBacklog">3</stringProp>
              <elementProp name="queryStringParameters" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </JMeter.plugins.functional.samplers.websocket.WebSocketSampler>
            <hashTree/>
            <JMeter.plugins.functional.samplers.websocket.WebSocketSampler guiclass="JMeter.plugins.functional.samplers.websocket.WebSocketSamplerGui" testclass="JMeter.plugins.functional.samplers.websocket.WebSocketSampler" testname="WebSocket Upload Data Point" enabled="true">
              <stringProp name="serverAddress">${ws_host}</stringProp>
              <stringProp name="serverPort">8000</stringProp>
              <stringProp name="implementation">RFC6455 (v13)</stringProp>
              <stringProp name="protocol">ws</stringProp>
              <stringProp name="contextPath">/deviceId/${deviceID}/deviceKey/${deviceKey}</stringProp>
              <stringProp name="contentEncoding">UTF-8</stringProp>
              <stringProp name="requestPayload">{&quot;datachannelId&quot;:&quot;${display_gpio}&quot;,&quot;values&quot;:{&quot;value&quot;:1}}</stringProp>
              <stringProp name="connectionTimeout">5000</stringProp>
              <stringProp name="responseTimeout">${response}</stringProp>
              <boolProp name="ignoreSslErrors">false</boolProp>
              <boolProp name="streamingConnection">true</boolProp>
              <stringProp name="connectionId"></stringProp>
              <stringProp name="responsePattern"></stringProp>
              <stringProp name="closeConncectionPattern"></stringProp>
              <stringProp name="proxyAddress"></stringProp>
              <stringProp name="proxyPassword"></stringProp>
              <stringProp name="proxyPort"></stringProp>
              <stringProp name="proxyUsername"></stringProp>
              <stringProp name="messageBacklog">3</stringProp>
              <elementProp name="queryStringParameters" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </JMeter.plugins.functional.samplers.websocket.WebSocketSampler>
            <hashTree/>
            <JMeter.plugins.functional.samplers.websocket.WebSocketSampler guiclass="JMeter.plugins.functional.samplers.websocket.WebSocketSamplerGui" testclass="JMeter.plugins.functional.samplers.websocket.WebSocketSampler" testname="WebSocket Upload Data Point" enabled="true">
              <stringProp name="serverAddress">${ws_host}</stringProp>
              <stringProp name="serverPort">8000</stringProp>
              <stringProp name="implementation">RFC6455 (v13)</stringProp>
              <stringProp name="protocol">ws</stringProp>
              <stringProp name="contextPath">/deviceId/${deviceID}/deviceKey/${deviceKey}</stringProp>
              <stringProp name="contentEncoding">UTF-8</stringProp>
              <stringProp name="requestPayload">{&quot;datachannelId&quot;:&quot;${display_pwm}&quot;,&quot;values&quot;:{&quot;value&quot;:${__Random(1, 100)},&quot;period&quot;:${__Random(1, 100)}}}</stringProp>
              <stringProp name="connectionTimeout">5000</stringProp>
              <stringProp name="responseTimeout">${response}</stringProp>
              <boolProp name="ignoreSslErrors">false</boolProp>
              <boolProp name="streamingConnection">true</boolProp>
              <stringProp name="connectionId"></stringProp>
              <stringProp name="responsePattern"></stringProp>
              <stringProp name="closeConncectionPattern"></stringProp>
              <stringProp name="proxyAddress"></stringProp>
              <stringProp name="proxyPassword"></stringProp>
              <stringProp name="proxyPort"></stringProp>
              <stringProp name="proxyUsername"></stringProp>
              <stringProp name="messageBacklog">3</stringProp>
              <elementProp name="queryStringParameters" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </JMeter.plugins.functional.samplers.websocket.WebSocketSampler>
            <hashTree/>
            <JMeter.plugins.functional.samplers.websocket.WebSocketSampler guiclass="JMeter.plugins.functional.samplers.websocket.WebSocketSamplerGui" testclass="JMeter.plugins.functional.samplers.websocket.WebSocketSampler" testname="WebSocket Upload Data Point" enabled="true">
              <stringProp name="serverAddress">${ws_host}</stringProp>
              <stringProp name="serverPort">8000</stringProp>
              <stringProp name="implementation">RFC6455 (v13)</stringProp>
              <stringProp name="protocol">ws</stringProp>
              <stringProp name="contextPath">/deviceId/${deviceID}/deviceKey/${deviceKey}</stringProp>
              <stringProp name="contentEncoding">UTF-8</stringProp>
              <stringProp name="requestPayload">{&quot;datachannelId&quot;:&quot;${control_boolean}&quot;,&quot;values&quot;:{&quot;value&quot;:${__Random(0, 1)}}}</stringProp>
              <stringProp name="connectionTimeout">5000</stringProp>
              <stringProp name="responseTimeout">${response}</stringProp>
              <boolProp name="ignoreSslErrors">false</boolProp>
              <boolProp name="streamingConnection">true</boolProp>
              <stringProp name="connectionId"></stringProp>
              <stringProp name="responsePattern"></stringProp>
              <stringProp name="closeConncectionPattern"></stringProp>
              <stringProp name="proxyAddress"></stringProp>
              <stringProp name="proxyPassword"></stringProp>
              <stringProp name="proxyPort"></stringProp>
              <stringProp name="proxyUsername"></stringProp>
              <stringProp name="messageBacklog">3</stringProp>
              <elementProp name="queryStringParameters" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </JMeter.plugins.functional.samplers.websocket.WebSocketSampler>
            <hashTree/>
            <JMeter.plugins.functional.samplers.websocket.WebSocketSampler guiclass="JMeter.plugins.functional.samplers.websocket.WebSocketSamplerGui" testclass="JMeter.plugins.functional.samplers.websocket.WebSocketSampler" testname="WebSocket Upload Data Point" enabled="true">
              <stringProp name="serverAddress">${ws_host}</stringProp>
              <stringProp name="serverPort">8000</stringProp>
              <stringProp name="implementation">RFC6455 (v13)</stringProp>
              <stringProp name="protocol">ws</stringProp>
              <stringProp name="contextPath">/deviceId/${deviceID}/deviceKey/${deviceKey}</stringProp>
              <stringProp name="contentEncoding">UTF-8</stringProp>
              <stringProp name="requestPayload">{&quot;datachannelId&quot;:&quot;${control_integer}&quot;,&quot;values&quot;:{&quot;value&quot;:${__Random(0, 100)}}}</stringProp>
              <stringProp name="connectionTimeout">5000</stringProp>
              <stringProp name="responseTimeout">${response}</stringProp>
              <boolProp name="ignoreSslErrors">false</boolProp>
              <boolProp name="streamingConnection">true</boolProp>
              <stringProp name="connectionId"></stringProp>
              <stringProp name="responsePattern"></stringProp>
              <stringProp name="closeConncectionPattern"></stringProp>
              <stringProp name="proxyAddress"></stringProp>
              <stringProp name="proxyPassword"></stringProp>
              <stringProp name="proxyPort"></stringProp>
              <stringProp name="proxyUsername"></stringProp>
              <stringProp name="messageBacklog">3</stringProp>
              <elementProp name="queryStringParameters" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </JMeter.plugins.functional.samplers.websocket.WebSocketSampler>
            <hashTree/>
            <JMeter.plugins.functional.samplers.websocket.WebSocketSampler guiclass="JMeter.plugins.functional.samplers.websocket.WebSocketSamplerGui" testclass="JMeter.plugins.functional.samplers.websocket.WebSocketSampler" testname="WebSocket Upload Data Point" enabled="true">
              <stringProp name="serverAddress">${ws_host}</stringProp>
              <stringProp name="serverPort">8000</stringProp>
              <stringProp name="implementation">RFC6455 (v13)</stringProp>
              <stringProp name="protocol">ws</stringProp>
              <stringProp name="contextPath">/deviceId/${deviceID}/deviceKey/${deviceKey}</stringProp>
              <stringProp name="contentEncoding">UTF-8</stringProp>
              <stringProp name="requestPayload">{&quot;datachannelId&quot;:&quot;${control_float}&quot;,&quot;values&quot;:{&quot;value&quot;:${__Random(1, 999999)}.${__Random(1, 999999)}}}</stringProp>
              <stringProp name="connectionTimeout">5000</stringProp>
              <stringProp name="responseTimeout">${response}</stringProp>
              <boolProp name="ignoreSslErrors">false</boolProp>
              <boolProp name="streamingConnection">true</boolProp>
              <stringProp name="connectionId"></stringProp>
              <stringProp name="responsePattern"></stringProp>
              <stringProp name="closeConncectionPattern"></stringProp>
              <stringProp name="proxyAddress"></stringProp>
              <stringProp name="proxyPassword"></stringProp>
              <stringProp name="proxyPort"></stringProp>
              <stringProp name="proxyUsername"></stringProp>
              <stringProp name="messageBacklog">3</stringProp>
              <elementProp name="queryStringParameters" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </JMeter.plugins.functional.samplers.websocket.WebSocketSampler>
            <hashTree/>
            <JMeter.plugins.functional.samplers.websocket.WebSocketSampler guiclass="JMeter.plugins.functional.samplers.websocket.WebSocketSamplerGui" testclass="JMeter.plugins.functional.samplers.websocket.WebSocketSampler" testname="WebSocket Upload Data Point" enabled="true">
              <stringProp name="serverAddress">${ws_host}</stringProp>
              <stringProp name="serverPort">8000</stringProp>
              <stringProp name="implementation">RFC6455 (v13)</stringProp>
              <stringProp name="protocol">ws</stringProp>
              <stringProp name="contextPath">/deviceId/${deviceID}/deviceKey/${deviceKey}</stringProp>
              <stringProp name="contentEncoding">UTF-8</stringProp>
              <stringProp name="requestPayload">{&quot;datachannelId&quot;:&quot;${control_hex}&quot;,&quot;values&quot;:{&quot;value&quot;:&quot;${__RandomString(30,ABCDEF0123456789)}&quot;}}</stringProp>
              <stringProp name="connectionTimeout">5000</stringProp>
              <stringProp name="responseTimeout">${response}</stringProp>
              <boolProp name="ignoreSslErrors">false</boolProp>
              <boolProp name="streamingConnection">true</boolProp>
              <stringProp name="connectionId"></stringProp>
              <stringProp name="responsePattern"></stringProp>
              <stringProp name="closeConncectionPattern"></stringProp>
              <stringProp name="proxyAddress"></stringProp>
              <stringProp name="proxyPassword"></stringProp>
              <stringProp name="proxyPort"></stringProp>
              <stringProp name="proxyUsername"></stringProp>
              <stringProp name="messageBacklog">3</stringProp>
              <elementProp name="queryStringParameters" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </JMeter.plugins.functional.samplers.websocket.WebSocketSampler>
            <hashTree/>
            <JMeter.plugins.functional.samplers.websocket.WebSocketSampler guiclass="JMeter.plugins.functional.samplers.websocket.WebSocketSamplerGui" testclass="JMeter.plugins.functional.samplers.websocket.WebSocketSampler" testname="WebSocket Upload Data Point" enabled="true">
              <stringProp name="serverAddress">${ws_host}</stringProp>
              <stringProp name="serverPort">8000</stringProp>
              <stringProp name="implementation">RFC6455 (v13)</stringProp>
              <stringProp name="protocol">ws</stringProp>
              <stringProp name="contextPath">/deviceId/${deviceID}/deviceKey/${deviceKey}</stringProp>
              <stringProp name="contentEncoding">UTF-8</stringProp>
              <stringProp name="requestPayload">{&quot;datachannelId&quot;:&quot;${control_string}&quot;,&quot;values&quot;:{&quot;value&quot;:&quot;${__RandomString(10,ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789)}&quot;}}</stringProp>
              <stringProp name="connectionTimeout">5000</stringProp>
              <stringProp name="responseTimeout">${response}</stringProp>
              <boolProp name="ignoreSslErrors">false</boolProp>
              <boolProp name="streamingConnection">true</boolProp>
              <stringProp name="connectionId"></stringProp>
              <stringProp name="responsePattern"></stringProp>
              <stringProp name="closeConncectionPattern"></stringProp>
              <stringProp name="proxyAddress"></stringProp>
              <stringProp name="proxyPassword"></stringProp>
              <stringProp name="proxyPort"></stringProp>
              <stringProp name="proxyUsername"></stringProp>
              <stringProp name="messageBacklog">3</stringProp>
              <elementProp name="queryStringParameters" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </JMeter.plugins.functional.samplers.websocket.WebSocketSampler>
            <hashTree/>
            <JMeter.plugins.functional.samplers.websocket.WebSocketSampler guiclass="JMeter.plugins.functional.samplers.websocket.WebSocketSamplerGui" testclass="JMeter.plugins.functional.samplers.websocket.WebSocketSampler" testname="WebSocket Upload Data Point" enabled="true">
              <stringProp name="serverAddress">${ws_host}</stringProp>
              <stringProp name="serverPort">8000</stringProp>
              <stringProp name="implementation">RFC6455 (v13)</stringProp>
              <stringProp name="protocol">ws</stringProp>
              <stringProp name="contextPath">/deviceId/${deviceID}/deviceKey/${deviceKey}</stringProp>
              <stringProp name="contentEncoding">UTF-8</stringProp>
              <stringProp name="requestPayload">{&quot;datachannelId&quot;:&quot;${control_gpio}&quot;,&quot;values&quot;:{&quot;value&quot;:1}}</stringProp>
              <stringProp name="connectionTimeout">5000</stringProp>
              <stringProp name="responseTimeout">${response}</stringProp>
              <boolProp name="ignoreSslErrors">false</boolProp>
              <boolProp name="streamingConnection">true</boolProp>
              <stringProp name="connectionId"></stringProp>
              <stringProp name="responsePattern"></stringProp>
              <stringProp name="closeConncectionPattern"></stringProp>
              <stringProp name="proxyAddress"></stringProp>
              <stringProp name="proxyPassword"></stringProp>
              <stringProp name="proxyPort"></stringProp>
              <stringProp name="proxyUsername"></stringProp>
              <stringProp name="messageBacklog">3</stringProp>
              <elementProp name="queryStringParameters" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </JMeter.plugins.functional.samplers.websocket.WebSocketSampler>
            <hashTree/>
            <JMeter.plugins.functional.samplers.websocket.WebSocketSampler guiclass="JMeter.plugins.functional.samplers.websocket.WebSocketSamplerGui" testclass="JMeter.plugins.functional.samplers.websocket.WebSocketSampler" testname="WebSocket Upload Data Point" enabled="true">
              <stringProp name="serverAddress">${ws_host}</stringProp>
              <stringProp name="serverPort">8000</stringProp>
              <stringProp name="implementation">RFC6455 (v13)</stringProp>
              <stringProp name="protocol">ws</stringProp>
              <stringProp name="contextPath">/deviceId/${deviceID}/deviceKey/${deviceKey}</stringProp>
              <stringProp name="contentEncoding">UTF-8</stringProp>
              <stringProp name="requestPayload">{&quot;datachannelId&quot;:&quot;${control_pwm}&quot;,&quot;values&quot;:{&quot;value&quot;:${__Random(1, 100)},&quot;period&quot;:${__Random(1, 100)}}}</stringProp>
              <stringProp name="connectionTimeout">5000</stringProp>
              <stringProp name="responseTimeout">${response}</stringProp>
              <boolProp name="ignoreSslErrors">false</boolProp>
              <boolProp name="streamingConnection">true</boolProp>
              <stringProp name="connectionId"></stringProp>
              <stringProp name="responsePattern"></stringProp>
              <stringProp name="closeConncectionPattern"></stringProp>
              <stringProp name="proxyAddress"></stringProp>
              <stringProp name="proxyPassword"></stringProp>
              <stringProp name="proxyPort"></stringProp>
              <stringProp name="proxyUsername"></stringProp>
              <stringProp name="messageBacklog">3</stringProp>
              <elementProp name="queryStringParameters" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </JMeter.plugins.functional.samplers.websocket.WebSocketSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="View Dashboard" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/dashboard</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="View Test Devices" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/api/devices/${deviceID}</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <kg.apc.jmeter.timers.VariableThroughputTimer guiclass="kg.apc.jmeter.timers.VariableThroughputTimerGui" testclass="kg.apc.jmeter.timers.VariableThroughputTimer" testname="jp@gc - Throughput Shaping Timer" enabled="true">
        <collectionProp name="load_profile">
          <collectionProp name="1249310320">
            <stringProp name="1">1</stringProp>
            <stringProp name="48625">100</stringProp>
            <stringProp name="60">60</stringProp>
          </collectionProp>
          <collectionProp name="-1971802190">
            <stringProp name="48625">100</stringProp>
            <stringProp name="48625">100</stringProp>
            <stringProp name="1688091">7200</stringProp>
          </collectionProp>
          <collectionProp name="-675800204">
            <stringProp name="48625">100</stringProp>
            <stringProp name="49">1</stringProp>
            <stringProp name="60">60</stringProp>
          </collectionProp>
        </collectionProp>
      </kg.apc.jmeter.timers.VariableThroughputTimer>
      <hashTree/>
    </hashTree>
    <WorkBench guiclass="WorkBenchGui" testclass="WorkBench" testname="WorkBench" enabled="true">
      <boolProp name="WorkBench.save">true</boolProp>
    </WorkBench>
    <hashTree/>
  </hashTree>
</jmeterTestPlan>
